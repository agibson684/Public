# Rules to filter/process all php application rules (local5)

filter {

  if [facility_label] == "local5" {

    if "newCCNumber=" in [message] {
      if "newCCNumber=XXXXXXXXXXXXXXXX" not in [message] {
        mutate {
          gsub => [
            "message", "newCCNumber=\d{16}", "newCCNumber=XXXXXXXXXXXXXXXX"
          ]
        }
      }
    }


      grok {
        patterns_dir => "/etc/logstash/patterns.d"
        match => { "message" => "%{PHPQUERYERROR}" }
        add_tag => ["queryfailure"]
        remove_tag => ["_grokparsefailure"]
      }
   
      if "_grokparsefailure" in [tags] {

        # Check for ARI msg matching for SA-7819
        grok {
          patterns_dir => "/etc/logstash/patterns.d"
          match => { "message" => "%{PHPARIMSG}" }
          add_tag => ["ari-msg"]
          remove_tag => ["_grokparsefailure"]
        }

        if "_grokparsefailure" in [tags] {

          # Check for ITO worker (ITO) for SA-7158
          grok {
            patterns_dir => "/etc/logstash/patterns.d"
            match => { "message" => "%{PHPITOWORKER}" }
            add_tag => ["ito-worker"]
            remove_tag => ["_grokparsefailure"]
          }

          if "_grokparsefailure" in [tags] {

            # Check for old deprecated pattern
            grok {
              patterns_dir => "/etc/logstash/patterns.d"
              match => { "message" => "%{PHPQUERYERROR_OLD}" }
              add_tag => ["queryfailure"]
              remove_tag => ["_grokparsefailure"]
           }

            if "_grokparsefailure" in [tags] {

              grok {
                patterns_dir => "/etc/logstash/patterns.d"
                match => { "message" => "%{PHPRUNTIMEERROR}" }
                add_tag => ["runtimeerror"]
                remove_tag => ["_grokparsefailure"]
              }

              if "_grokparsefailure" in [tags] {

                grok {
                  patterns_dir => "/etc/logstash/patterns.d"
                  match => { "message" => "%{PHPRUNTIMEERROR_OLD}" }
                  add_tag => ["runtimeerror"]
                  remove_tag => ["_grokparsefailure"]
                }

                if "_grokparsefailure" in [tags] {

                  # Searches for JS Errors
                  grok {
                    patterns_dir => "/etc/logstash/patterns.d"
                    match => { "message" => "%{JSERROR}" }
                    add_tag => ["jserror"]
                    remove_tag => ["_grokparsefailure"]

                    }
                   # Newest pattern for PHP Runtime Errors
                if "_grokparsefailure" in [tags] {
                   grok {
                   patterns_dir => "/etc/logstash/patterns.d"
                   match => { "message" => "%{PHPHOTELSCONNFAILURE}" }
                   add_tag => ["hotelerror"]
                  remove_tag => ["_grokparsefailure"]
                  }
		}              
              }
            }
          }
        }
      }
    }
  }
}


