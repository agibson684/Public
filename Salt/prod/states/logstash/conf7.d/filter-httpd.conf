filter {
  if  [program] == "http" {
    grok {
      patterns_dir => "/etc/logstash/patterns.d"
      match => { "message" => "%{CUSTOMAPACHELOG2}" }
    }
    if  [tags] == "_grokparsefailure" {
      mutate {
        remove_tag => ["_grokparsefailure"]
      }
      grok {
        patterns_dir => "/etc/logstash/patterns.d"
        match => { "message" => "%{CUSTOMAPACHELOG3}" }
      }
    }
    if  [tags] == "_grokparsefailure" {
      mutate {
        remove_tag => ["_grokparsefailure"]
      }
      grok {
        match => { "message" => "%{COMBINEDAPACHELOG}" }
      }
    }
    if  [tags] == "_grokparsefailure" {
      mutate {
        remove_tag => ["_grokparsefailure"]
      }
      grok {
        patterns_dir => "/etc/logstash/patterns.d"
        match => { "message" => "%{COMMONAPACHELOG}" }
      }
    }

    # Attempt to match entry with custom apache error grok
    if  [tags] == "_grokparsefailure"  {
      mutate {
        remove_tag => ["_grokparsefailure"]
      }
      grok {
        patterns_dir => "/etc/logstash/patterns.d"
        match => { "message" => "%{HTTPERROR}" }
      }
    }

    # Allow specific errors to pass
    if  [tags] == "_grokparsefailure" {
      if  [message] == "Segmentation fault" or [message] == "zend_mm_heap corrupted" {
        mutate {
          remove_tag => ["_grokparsefailure"]
        }
      }
    }
   geoip { source => "clientip" } 
  }
  else if [facility_label] == "local2" {
    mutate {
      remove_tag => ["_grokparsefailure"]
    }
    grok {
      patterns_dir => "/etc/logstash/patterns.d"
      match => { "message" => "%{HTTPERROR}" }
    }
  }
}
