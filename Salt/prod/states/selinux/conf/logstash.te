
module logstash 1.0;

require {
	type cgroup_t;
	type sssd_public_t;
	type wap_wsp_port_t;
	type random_device_t;
	type tmpfs_t;
	type usr_t;
	type bin_t;
	type proc_t;
	type sssd_var_lib_t;
	type proc_net_t;
	type tmp_t;
	type net_conf_t;
	type cert_t;
	type sysfs_t;
	type unreserved_port_t;
	type etc_t;
	type var_log_t;
	type node_t;
	type var_lib_t;
	type mylogstash_t;
	type shell_exec_t;
	class file { create execute execute_no_trans getattr ioctl lock map open read unlink write };
	class dir { add_name create getattr read remove_name search write };
	class process execmem;
	class tcp_socket { accept bind connect create getattr getopt listen name_bind name_connect node_bind setopt };
	class udp_socket { bind create getattr name_bind node_bind setopt };
	class chr_file { getattr open read };
	class lnk_file read;
}

#============= mylogstash_t ==============

#!!!! This avc can be allowed using the boolean 'domain_can_mmap_files'
allow mylogstash_t bin_t:file map;
allow mylogstash_t bin_t:file { execute execute_no_trans };
allow mylogstash_t cert_t:dir { getattr search };
allow mylogstash_t cert_t:file { getattr open read };
allow mylogstash_t cert_t:lnk_file read;
allow mylogstash_t cgroup_t:dir { getattr search };
allow mylogstash_t cgroup_t:file { getattr ioctl open read };

#!!!! This avc can be allowed using the boolean 'domain_can_mmap_files'
allow mylogstash_t etc_t:file map;
allow mylogstash_t net_conf_t:file { getattr open read };
allow mylogstash_t node_t:tcp_socket node_bind;
allow mylogstash_t node_t:udp_socket node_bind;
allow mylogstash_t proc_net_t:file { getattr open read };
allow mylogstash_t proc_t:file { getattr ioctl open read };
allow mylogstash_t random_device_t:chr_file { getattr open read };
allow mylogstash_t self:process execmem;
allow mylogstash_t self:tcp_socket { accept bind connect create getattr getopt listen setopt };
allow mylogstash_t self:udp_socket { bind create getattr setopt };
allow mylogstash_t shell_exec_t:file execute;

#!!!! This avc can be allowed using the boolean 'domain_can_mmap_files'
allow mylogstash_t shell_exec_t:file map;
allow mylogstash_t sssd_public_t:dir search;

#!!!! This avc can be allowed using the boolean 'domain_can_mmap_files'
allow mylogstash_t sssd_public_t:file map;
allow mylogstash_t sssd_public_t:file { getattr open read };
allow mylogstash_t sssd_var_lib_t:dir search;
allow mylogstash_t sysfs_t:dir read;
allow mylogstash_t tmp_t:dir { add_name create read remove_name write };

#!!!! This avc can be allowed using the boolean 'domain_can_mmap_files'
allow mylogstash_t tmp_t:file map;
allow mylogstash_t tmp_t:file { create execute unlink write };
allow mylogstash_t tmpfs_t:lnk_file read;
allow mylogstash_t unreserved_port_t:tcp_socket name_bind;
allow mylogstash_t unreserved_port_t:udp_socket name_bind;
allow mylogstash_t usr_t:dir write;

#!!!! This avc can be allowed using the boolean 'domain_can_mmap_files'
allow mylogstash_t usr_t:file map;
allow mylogstash_t var_lib_t:dir write;
allow mylogstash_t var_lib_t:file { getattr ioctl lock open read write };
allow mylogstash_t var_log_t:dir { add_name create write };
allow mylogstash_t var_log_t:file { create open read };
allow mylogstash_t wap_wsp_port_t:tcp_socket name_connect;
